/* Apply basic box-sizing to avoid weird behavior with padding/margins */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* The whole page is a flex container in a column direction */
html, body {
  height: 100%; /* Make sure body fills the entire viewport */
  display: flex;
  flex-direction: column;
}

/* Header will be fixed size */
header {
  background: #4CAF50;
  color: white;
  padding: 1rem;
  text-align: center;
}

/* Footer will also be fixed size */
footer {
  background: #333;
  color: white;
  padding: 1rem;
  text-align: center;
}

main {
  flex: 1;
  display: flex;
  flex-direction: column; /* Stacks everything vertically by default */
  gap: 20px; /* Adds space between elements */
  padding: 1rem;
  background-color: #f4f4f4;
}

/* Larger box for the input */
#input-box {
  flex: 2;
  background-color: #ffffff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  position: relative;
  display: flex; /* Added flexbox to arrange children horizontally */
  justify-content: center; /* Center children horizontally */
  align-items: center; /* Center children vertically */
  gap: 10px; /* Optional: space between children */
}

/* Style for the input field */
#input-box input {
  padding: 0.5rem;
  font-size: 16px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

/* Style for the button */
#scrape-btn {
  padding: 0.5rem 1rem;
  background-color: #007BFF;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

/* Loading indicator (initially hidden) */
#loading-indicator {
  display: none; /* Hidden by default */
  width: 20px;
  height: 20px;
  animation: spin 1s linear infinite;
}

/* Animation for the loading spinner */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Make the loader visible when active */
#loading-indicator.visible {
  display: inline-block; /* Show when active */
  position: absolute;
  right: 35px;
}

/* Optional: Add a spinner animation symbol */
#loading-indicator:before {
  content: '‚è≥'; /* You can use any other symbol or an actual spinner GIF here */
  margin-right: 5px;
}

/* Box container for the two side-by-side boxes */
#result-container {
  display: flex;
  flex-direction: row;
  gap: 20px; /* Space between left and right boxes */
  justify-content: space-between;
}

/* Left box (JSON display) */
#json-box {
  flex: 3; /* Takes up equal space */
  background-color: #ffffff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow-y: auto; /* Makes sure long JSON doesn't overflow the box */
  height: 300px; /* Define a height for the JSON box */
}

/* Right box (Scraped Google results) */
#google-results-box {
  flex: 2; /* Takes more space */
  background-color: #ffffff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  height: 300px; /* Define a height for the results box */
  overflow-y: auto; /* Makes sure long results don't overflow */
}

/* Save button */
#save-btn {
  color: white;
  padding: 1rem;
  text-align: center;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s;
}

#save-btn[data-state=enabled] {
  background-color: #4CAF50;
}

#save-btn:not([data-state=enabled]) {
  background-color: grey;
  cursor: initial;
}

/* Save button hover effect */
#save-btn[data-state=enabled]:hover {
  background-color: #45a049;
}

.changedQuery {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  font-size: 26px;
  margin-bottom: 25px;
  color: orangered;
}

.validNode:not(:last-child) {
  margin-bottom: 20px;
}

/* Responsive design - stack boxes on small screens */
@media (max-width: 768px) {
  #result-container {
    flex-direction: column; /* Stack the boxes vertically */
  }
  
  #google-results-box, #json-box {
    flex: 1 1 100%; /* Full width on small screens */
  }
}

/* JSON formatting */
.jsonKeyValuePair {
  margin-left: 15px;
}

.jsonKeyValuePair .key {
  color: navy;
}

.jsonKeyValuePair .value {
  color: orange;
}

.jsonKeyValuePair .value.headline {
  color: orangered;
}

.jsonKeyValuePair .value.link {
  color: #5DADE2;
}

/* extra result formatting */
.validNode a.mainAnchor {
  text-decoration: none;
}

.validNode h3 {
  color: orangered;
  transition: color 0.5s;
}

.validNode h3:hover {
  color: blue;
  text-decoration: none;
}
